{"version":3,"sources":["components/SocialIcon.jsx","components/Main.jsx","App.jsx","serviceWorker.js","index.js"],"names":["renderTooltip","tooltip","style","backgroundColor","padding","color","borderRadius","SocialIcon","link","icon","OverlayTrigger","placement","delay","show","hide","overlay","className","target","rel","href","Main","textAlign","Container","Card","width","Body","Title","Text","ListGroup","ListGroupItem","Link","role","aria-label","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gRAIMA,EAAgB,SAACC,GAAD,OACpB,yBACEC,MAAO,CACLC,gBAAiB,sBACjBC,QAAS,WACTC,MAAO,QACPC,aAAc,IAGfL,IAKU,SAASM,EAAT,GAA8C,IAAxBN,EAAuB,EAAvBA,QAASO,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAClD,OACE,kBAACC,EAAA,EAAD,CACEC,UAAU,YACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QAASf,EAAcC,IAEvB,uBACEe,UAAU,sBACVC,OAAO,SACPC,IAAI,sBACJC,KAAMX,GAEN,0BAAMQ,UAAS,gBAAWP,EAAX,cCkERW,MApFf,WACE,OACE,yBAAKlB,MAAO,CAAEmB,UAAW,WACvB,kBAACC,EAAA,EAAD,KACE,0CACA,kBAACf,EAAD,CACEE,KAAK,kBACLD,KAAK,8BACLP,QAAQ,UAEV,kBAACM,EAAD,CACEE,KAAK,gBACLD,KAAK,gCACLP,QAAQ,WAEV,kBAACM,EAAD,CACEE,KAAK,kBACLD,KAAK,qCACLP,QAAQ,aAEV,kBAACM,EAAD,CACEE,KAAK,OACLD,KAAK,cACLP,QAAQ,WAEV,yBAAKe,UAAU,aACb,kBAACO,EAAA,EAAD,CAAMrB,MAAO,CAAEsB,MAAO,UACpB,kBAACD,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,uCACA,kBAACH,EAAA,EAAKI,KAAN,sFAKF,kBAACC,EAAA,EAAD,CAAWZ,UAAU,oBACnB,kBAACa,EAAA,EAAD,6BAGA,kBAACA,EAAA,EAAD,2BAGA,kBAACA,EAAA,EAAD,KACE,kBAACN,EAAA,EAAKO,KAAN,CAAWX,KA5CQ,uLA4CnB,+BAIF,kBAACU,EAAA,EAAD,KACE,kBAACN,EAAA,EAAKO,KAAN,CAAWX,KAAK,gDAAhB,wBAKJ,kBAACI,EAAA,EAAKE,KAAN,KACE,kBAAClB,EAAD,CACEE,KAAK,QACLD,KAAK,gCACLP,QAAQ,0BAEV,kBAACM,EAAD,CACEE,KAAK,gBACLD,KAAK,0CACLP,QAAQ,WAId,kBAACsB,EAAA,EAAD,CAAMrB,MAAO,CAAEsB,MAAO,UACpB,kBAACD,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,gCAEE,0BAAMK,KAAK,MAAMC,aAAW,cAA5B,iBAEF,kBAACT,EAAA,EAAKI,KAAN,uBAEE,uBAAGR,KAAK,iCAAR,UAFF,kBCvECc,MARf,WACE,OACE,yBAAKjB,UAAU,OACb,kBAAC,EAAD,QCIckB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6bda1534.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\nconst renderTooltip = (tooltip) => (\n  <div\n    style={{\n      backgroundColor: 'rgba(0, 0, 0, 0.85)',\n      padding: '2px 10px',\n      color: 'white',\n      borderRadius: 3,\n    }}\n  >\n    {tooltip}\n  </div>\n);\n\n\nexport default function SocialIcon({ tooltip, link, icon }) {\n  return (\n    <OverlayTrigger\n      placement=\"top-start\"\n      delay={{ show: 250, hide: 250 }}\n      overlay={renderTooltip(tooltip)}\n    >\n      <a\n        className=\"btn btn-social-icon\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={link}\n      >\n        <span className={`fa fa-${icon} fa-2x`} />\n      </a>\n    </OverlayTrigger>\n  );\n}\n\nSocialIcon.propTypes = {\n  tooltip: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\n// Bootstrap\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n// Custom Components\nimport SocialIcon from './SocialIcon';\n\nconst dataSciencePresentationUrl = 'https://docs.google.com/presentation/d/e/2PACX-1vS6ga2yJyG4DLHy3NqM45bMSaWShGB8QL8UWTp_AIHuywmi9bT1lAvE9VftSEF6QdJfw8IVJLOL5IXH/pub?start=false&loop=false&delayms=3000&slide=id.p1';\n\nfunction Main() {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <Container>\n        <h1>Simon Fong</h1>\n        <SocialIcon\n          icon=\"envelope-square\"\n          link=\"mailto:simonfong6@gmail.com\"\n          tooltip=\"Email\"\n        />\n        <SocialIcon\n          icon=\"github-square\"\n          link=\"https://github.com/simonfong6\"\n          tooltip=\"GitHub\"\n        />\n        <SocialIcon\n          icon=\"linkedin-square\"\n          link=\"https://linkedin.com/in/simonfong6\"\n          tooltip=\"LinkedIn\"\n        />\n        <SocialIcon\n          icon=\"file\"\n          link=\"/resume.pdf\"\n          tooltip=\"Resume\"\n        />\n        <div className=\"card-deck\">\n          <Card style={{ width: '18rem' }}>\n            <Card.Body>\n              <Card.Title>Subtle Asian Dating Score Test</Card.Title>\n              <Card.Text>\n                A quiz to measure how dateable you are in the Subtle Asian Dating\n                community.\n              </Card.Text>\n            </Card.Body>\n            <ListGroup className=\"list-group-flush\">\n              <ListGroupItem>\n                Built within 4 hours\n              </ListGroupItem>\n              <ListGroupItem>\n                Over 20,000 visits\n              </ListGroupItem>\n              <ListGroupItem>\n                <Card.Link href={dataSciencePresentationUrl}>\n                  Data Analysis Presentation\n                </Card.Link>\n              </ListGroupItem>\n              <ListGroupItem>\n                <Card.Link href=\"https://github.com/simonfong6/ECE-143-Team-6\">\n                  Data Analysis Code\n                </Card.Link>\n              </ListGroupItem>\n            </ListGroup>\n            <Card.Body>\n              <SocialIcon\n                icon=\"globe\"\n                link=\"http://subtleasiandating.org/\"\n                tooltip=\"subtleasiandating.org\"\n              />\n              <SocialIcon\n                icon=\"github-square\"\n                link=\"https://github.com/simonfong6/sad-score\"\n                tooltip=\"Code\"\n              />\n            </Card.Body>\n          </Card>\n          <Card style={{ width: '18rem' }}>\n            <Card.Body>\n              <Card.Title>\n                More projects to come...\n                <span role=\"img\" aria-label=\"smileyface\">ðŸ˜Š</span>\n              </Card.Title>\n              <Card.Text>\n                Please check my\n                <a href=\"https://github.com/simonfong6\">GitHub</a>\n                for now.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\n\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}